globals
    constant integer ORC_CITIZEN_MALE       = 'n00I'
    constant integer ORC_CITIZEN_FEMALE     = 'n00J'
    constant integer ORC_HOUSING            = 'h00V'
endglobals

//===========================================================================
// Calculate the modulus/remainder of (dividend) divided by (divisor).
// Examples:  18 mod 5 = 3.  15 mod 5 = 0.  -8 mod 5 = 2.
//
function ModuloInteger takes integer dividend, integer divisor returns integer
    local integer modulus = dividend - (dividend / divisor) * divisor

    // If the dividend was negative, the above modulus calculation will
    // be negative, but within (-divisor..0).  We can add (divisor) to
    // shift this result into the desired range of (0..divisor).
    if (modulus < 0) then
        set modulus = modulus + divisor
    endif

    return modulus
endfunction

function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()
    local integer mod = ModuloInteger(level, 4)
    local boolean skillUlti = ModuloInteger(level, 6) == 0 and level / 6 <= 9

    if (curHero == BLADE_MASTER) then
        if (skillUlti) then
            return BLADE_STORM
        elseif (mod == 0) then
            return CRITICAL_STRIKE
        elseif (mod == 1) then
            return MIRROR_IMAGE
        elseif (mod == 2) then
            return WIND_WALK
        endif
    elseif (curHero == FAR_SEER) then
        if (skillUlti) then
            return EARTHQUAKE
        elseif (mod == 0) then
            return CHAIN_LIGHTNING
        elseif (mod == 1) then
            return FAR_SIGHT
        elseif (mod == 2) then
            return SPIRIT_WOLF
        endif
    elseif (curHero == TAUREN_CHIEF) then
        if (skillUlti) then
            return REINCARNATION
        elseif (mod == 0) then
            return ENDURANE_AURA
        elseif (mod == 1) then
            return SHOCKWAVE
        elseif (mod == 2) then
            return WAR_STOMP
        endif
    elseif (curHero == SHADOW_HUNTER) then
        if (skillUlti) then
            return VOODOO
        elseif (mod == 0) then
            return HEALING_WAVE
        elseif (mod == 1) then
            return HEX
        elseif (mod == 2) then
            return SERPENT_WARD
        endif
    endif

    return 'Aamk'
endfunction

function ConfigureAI takes nothing returns nothing
    call SetTargetHeroes( true )
    call SetUnitsFlee( true )
    call SetHeroesFlee( true )
    call SetPeonsRepair( true )
    call SetHeroesBuyItems( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
endfunction

function BuildingStrategy takes nothing returns nothing
    // **********************************
    // *      Building Strategy         *
    // **********************************
    // Tier 1 Buildings
    call SetReplacements( 1, 2, 3 )
    call SetBuildUnit( 1, GREAT_HALL )
    call SetBuildUnit( 10, PEON )
    call SetBuildUnit( 2, ORC_CITIZEN_MALE )
    call SetBuildUnit( 3, BURROW )
    call SetBuildUnit( 3, ORC_HOUSING )
    call SetBuildUnit( 2, ORC_BARRACKS )
    call SetBuildUnit( 1, ORC_ALTAR )
    call SetBuildUnit( 1, FORGE )
    call SetBuildUnit( 1, VOODOO_LOUNGE )
    call CampaignDefenderEx( 2, 2, 3, GRUNT )
    call CampaignDefenderEx( 1, 1, 1, HEAD_HUNTER )
    call SetBuildUpgr( 1, UPG_ORC_BURROWS )
    call SetBuildUpgr( 1, UPG_ORC_SPIKES )

    // Tier 2 buildings
    call SetBuildUnit( 1, STRONGHOLD )
    call SetBuildUnit( 1, FORGE )
    call SetBuildUnit( 1, LODGE )
    call SetBuildUnit( 1, BESTIARY )
    call SetBuildUnit( 4, BURROW )
    call SetBuildUnit( 5, PEON )
    call SetBuildUnit( 4, ORC_CITIZEN_FEMALE )
    call SetBuildUnit( 4, ORC_WATCH_TOWER )
    call SetBuildUpgr( 1, UPG_ORC_BURROWS )
    call SetBuildUpgr( 1, UPG_ORC_SPIKES )

    // Tier 3 buildings
    call SetBuildUnit( 1, FORTRESS )
    call SetBuildUnit( 1, TOTEM )
    call SetBuildUnit( 5, BURROW )
    call SetBuildUnit( 4, ORC_WATCH_TOWER )
    call SetBuildUnit( 2, ORC_CITIZEN_MALE )
    call SetBuildUnit( 3, ORC_HOUSING )
    call SetBuildUpgr( 1, UPG_ORC_BURROWS )
    call SetBuildUpgr( 1, UPG_ORC_SPIKES )
    // **********************************
    // *    End Building Strategy       *
    // **********************************
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    // Target Priority #2
    if (target == null) then
        set target = GetExpansionFoe()
        if (target != null) then
            set take_exp = false
        endif
    endif

    // Target Priority #3
    if (target == null) then
        set target = GetMegaTarget()
    endif

    // Target Priority #4
    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #5
    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    // Target Priority #6
    if (target == null) then
        set target = GetCreepCamp( 0, 9, false )
    endif

    // Target Priority #7
    if (target == null) then
        set target = GetCreepCamp( 10, 100, true )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

function AttackWaves takes nothing returns nothing
    //*** WAVE 1 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, GRUNT )
    call CampaignAttackerEx( 0, 1, 2, HEAD_HUNTER )
    call Sleep( M3 ) // Waits 3 minutes before attacking
    call LaunchAttack()

    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_MELEE )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_RANGED )
    call SetBuildUpgr( 1, UPG_ORC_BERSERK )

    //*** WAVE 1 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, GRUNT )
    call CampaignAttackerEx( 0, 1, 2, HEAD_HUNTER )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    call SetBuildUpgr( 1, UPG_ORC_REGEN )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_ARMOR )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ARMOR )

    //*** WAVE 2 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call Sleep( M1 ) // Waits 1 minute before attacking
    call LaunchAttack()

    call SetBuildUpgr( 1, UPG_ORC_BERSERKER )

    //*** WAVE 3 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    call SetBuildUpgr( 1, UPG_ORC_ENSNARE )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_MELEE )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_RANGED )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_ARMOR )

    //*** WAVE 4 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_MELEE )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_RANGED )
    call SetBuildUpgrEx( 1, 2, 3, UPG_ORC_ARMOR )

    //*** WAVE 5 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 6 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 7 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call CampaignAttackerEx( 2, 2, 3, SHAMAN )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 8 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call CampaignAttackerEx( 2, 2, 3, SHAMAN )
    call CampaignAttackerEx( 2, 2, 3, KODO_BEAST )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 9 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call CampaignAttackerEx( 2, 2, 3, SHAMAN )
    call CampaignAttackerEx( 2, 2, 3, KODO_BEAST )
    call CampaignAttackerEx( 2, 2, 3, WYVERN )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 10 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GRUNT )
    call CampaignAttackerEx( 1, 2, 3, HEAD_HUNTER )
    call CampaignAttackerEx( 1, 2, 3, RAIDER )
    call CampaignAttackerEx( 1, 2, 3, CATAPULT )
    call CampaignAttackerEx( 2, 2, 3, WITCH_DOCTOR )
    call CampaignAttackerEx( 2, 2, 3, SHAMAN )
    call CampaignAttackerEx( 2, 2, 3, KODO_BEAST )
    call CampaignAttackerEx( 2, 2, 3, WYVERN )
    call CampaignAttackerEx( 2, 2, 3, TAUREN )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    loop //Init the infinite attack loop
        //*** WAVE 11 ***
        call InitAssaultGroup()
        call CampaignAttackerEx( 20, 30, 40, GRUNT )
        call CampaignAttackerEx( 10, 20, 30, HEAD_HUNTER )
        call CampaignAttackerEx( 10, 20, 30, RAIDER )
        call CampaignAttackerEx( 10, 20, 30, CATAPULT )
        call CampaignAttackerEx( 10, 20, 30, WITCH_DOCTOR )
        call CampaignAttackerEx( 10, 20, 30, SHAMAN )
        call CampaignAttackerEx( 10, 20, 30, KODO_BEAST )
        call CampaignAttackerEx( 10, 20, 30, WYVERN )
        call CampaignAttackerEx( 10, 20, 30, TAUREN )
        call Sleep( M2 ) // Waits 2 minutes before attacking
        call LaunchAttack()
    endloop
endfunction

function main takes nothing returns nothing
    call CampaignAI( BURROW, function ChooseHeroSkill )
    call ConfigureAI( )

    call BuildingStrategy( )

    call AttackWaves( )
endfunction