globals
	constant integer GRYPHON_MOUNT                                   = 'h004'
	constant integer WYVERN_MOUNT                                    = 'o003'
	constant integer FROST_WYRM_MOUNT                                = 'u004'
	constant integer CHIMAERA_MOUNT                                  = 'e005'
	constant integer NETHER_DRAKE_MOUNT                              = 'n007'
	
	constant integer FOUNTAIN_OF_LIFE                                = 'h007'
	constant integer NEUTRAL_CITIZEN                                 = 'n02Y'

    constant integer DARK_RANGER_NEUTRAL                             = 'Nbrn'
	constant integer DARK_RANGER_SILENCE                             = 'ANsi'
	constant integer DARK_RANGER_DARK_PORTAL                         = 'A01T'
	constant integer DARK_RANGER_LIFE_DRAIN                          = 'ANdr'
	constant integer DARK_RANGER_UNHOLY_SPIRITS                      = 'A01S'
	constant integer DARK_RANGER_CHARM                               = 'ANch'
	constant integer DARK_RANGER_BLACK_ARROW                         = 'ANba'

	constant integer DEATH_KNIGHT_SHADOW_WORD_DEATH                  = 'A01Q'
	
	constant integer PIT_LORD_NEUTRAL                                = 'Nplh'
	constant integer RAIN_OF_FIRE                                    = 'ANrf'
	constant integer HOWL_OF_TERROR                                  = 'ANht'
	constant integer CLEAVING_ATTACK                                 = 'ANca'
	constant integer DEMON_MASTER                                    = 'A01R'
	
	constant integer DREAD_LORD_RAIN_OF_CHAOS                        = 'A07V'
	
	constant integer EREDAR_WARLOCK_NEUTRAL                          = 'U00M'
	constant integer EREDAR_WARLOCK_FIRE_BOLT                        = 'ANfb'
	constant integer EREDAR_WARLOCK_MANA_SHIELD                      = 'ANms'
	constant integer EREDAR_WARLOCK_BASH                             = 'A061'
	constant integer EREDAR_FINGER_OF_DEATH                          = 'A060'
	
	constant integer FURBOLG_URSA_WARRIOR_HERO                       = 'E00E'
	constant integer FURBOLG_REJUVENATION                            = 'A06X'
	constant integer FURBOLG_FAERIE_FIRE                             = 'A06Y'
	constant integer FURBOLG_COMMAND_AURA                            = 'A06Z'
	constant integer FURBOLG_CORRUPTION                              = 'A070'
	
    constant integer MOUNTAIN_GIANT_HERO                             = 'E00G'
	constant integer MOUNTAIN_GIANT_TAUNT                            = 'A098'
	constant integer MOUNTAIN_GIANT_HARDENED_SKIN                    = 'A099'
	constant integer MOUNTAIN_GIANT_EAT_TREE                         = 'A09B'
	constant integer MOUNTAIN_GIANT_WAR_CLUB                         = 'A09A'
	
	constant integer AKAMA                                           = 'N01K'
	constant integer REINCARNATION_AKAMA                             = 'A08K'
	constant integer SPIRIT_WOLF_AKAMA                               = 'A08I'
    constant integer SHADOW_TOUCH_AKAMA                              = 'A08G'
    
    constant integer FORKED_LIGHTNING                                = 'ANfl'
    constant integer FROST_ARROWS                                    = 'ANfa'
    constant integer MANA_SHIELD                                     = 'ANms'
    constant integer TORNADO                                         = 'ANto'
    
    constant integer BEASTMASTER                                     = 'Nbst'
    
    constant integer STAMPEDE                                        = 'ANst'
    constant integer SUMMON_BEAR                                     = 'ANsg'
    constant integer SUMMON_QUILBEAST                                = 'ANsq'
    constant integer SUMMON_HAWK                                     = 'ANsw'
    
    constant integer ALCHEMIST                                       = 'Nalc'
    constant integer TINKER                                          = 'Ntin'
    constant integer BREWMASTER                                      = 'Npbm'
    constant integer FIRELORD                                        = 'Nfir'

	constant integer CREEP_DARK_WIZARD                               = 'nwzd'
	constant integer CREEP_UNBROKEN_DARK_WEAVER                      = 'nubw'
	constant integer CREEP_DOOM_GUARD                                = 'nbal'
	constant integer CREEP_WRAITH                                    = 'ngh2'
	constant integer CREEP_SPIDER_CRAB                               = 'nsc2'
	constant integer CREEP_HARPY                                     = 'nhrh'
	constant integer CREEP_GREEN_DRAGON                              = 'ngrd'

	constant integer UPG_TEMPLE_BLUEPRINTS                           = 'R00B'
	constant integer UPG_STORM_PROTECTION                            = 'R029'
	constant integer UPG_IMPROVED_MASONRY                            = 'R00W'
	constant integer UPG_IMPROVED_MOUNT                              = 'R024'
	constant integer UPG_CHEAP_EVOLUTION                             = 'R01V'
	constant integer UPG_IMPROVED_POWER_GENERATOR                    = 'R01T'

	constant integer POWER_GENERATOR                                 = 'n025'

	constant integer SHREDDER                                        = 'ngir'
	constant integer AI_LABORATORY                                   = 'h01T'
	constant integer FREELANCER_LABORATORY                           = 'h01V'
	constant integer FREELANCER_SHOP                                 = 'h01S'
	constant integer FREELANCER_MERCENARY_CAMP                       = 'h01U'
endglobals

//===========================================================================
// Calculate the modulus/remainder of (dividend) divided by (divisor).
// Examples:  18 mod 5 = 3.  15 mod 5 = 0.  -8 mod 5 = 2.
//
function ModuloInteger takes integer dividend, integer divisor returns integer
    local integer modulus = dividend - (dividend / divisor) * divisor

    // If the dividend was negative, the above modulus calculation will
    // be negative, but within (-divisor..0).  We can add (divisor) to
    // shift this result into the desired range of (0..divisor).
    if (modulus < 0) then
        set modulus = modulus + divisor
    endif

    return modulus
endfunction

function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()
    local integer mod = ModuloInteger(level, 4)
    local boolean skillUlti = ModuloInteger(level, 6) == 0 and level / 6 <= 9

    // Human
    if (curHero == PALADIN) then
        if (skillUlti) then
            return RESURRECTION
        elseif (mod == 0) then
            return HOLY_BOLT
        elseif (mod == 1) then
            return DIVINE_SHIELD
        elseif (mod == 2) then
            return DEVOTION_AURA
        endif
    elseif (curHero == ARCHMAGE) then
        if (skillUlti) then
            return MASS_TELEPORT
        elseif (mod == 0) then
            return BLIZZARD
        elseif (mod == 1) then
            return BRILLIANCE_AURA
        elseif (mod == 2) then
            return WATER_ELEMENTAL
        endif
    elseif (curHero == MTN_KING) then
        if (skillUlti) then
            return AVATAR
        elseif (mod == 0) then
            return THUNDER_CLAP
        elseif (mod == 1) then
            return THUNDER_BOLT
        elseif (mod == 2) then
            return BASH
        endif
    elseif (curHero == BLOOD_MAGE) then
        if (skillUlti) then
            return SUMMON_PHOENIX
        elseif (mod == 0) then
            return FLAME_STRIKE
        elseif (mod == 1) then
            return BANISH
        elseif (mod == 2) then
            return SIPHON_MANA
        endif
    // Orc
	elseif (curHero == BLADE_MASTER) then
        if (skillUlti) then
            return BLADE_STORM
        elseif (mod == 0) then
            return CRITICAL_STRIKE
        elseif (mod == 1) then
            return MIRROR_IMAGE
        elseif (mod == 2) then
            return WIND_WALK
        endif
    elseif (curHero == FAR_SEER) then
        if (skillUlti) then
            return EARTHQUAKE
        elseif (mod == 0) then
            return CHAIN_LIGHTNING
        elseif (mod == 1) then
            return FAR_SIGHT
        elseif (mod == 2) then
            return SPIRIT_WOLF
        endif
    elseif (curHero == TAUREN_CHIEF) then
        if (skillUlti) then
            return REINCARNATION
        elseif (mod == 0) then
            return ENDURANE_AURA
        elseif (mod == 1) then
            return SHOCKWAVE
        elseif (mod == 2) then
            return WAR_STOMP
        endif
    elseif (curHero == SHADOW_HUNTER) then
        if (skillUlti) then
            return VOODOO
        elseif (mod == 0) then
            return HEALING_WAVE
        elseif (mod == 1) then
            return HEX
        elseif (mod == 2) then
            return SERPENT_WARD
        endif
    // Night Elf
     elseif (curHero == DEMON_HUNTER) then
        if (skillUlti) then
            return METAMORPHOSIS
        elseif (mod == 0) then
            return EVASION
        elseif (mod == 1) then
            return MANA_BURN
        elseif (mod == 2) then
            return IMMOLATION
        endif
    elseif (curHero == KEEPER) then
        if (skillUlti) then
            return TRANQUILITY
        elseif (mod == 0) then
            return THORNS_AURA
        elseif (mod == 1) then
            return FORCE_NATURE
        elseif (mod == 2) then
            return ENT_ROOTS
        endif
    elseif (curHero == MOON_CHICK) then
        if (skillUlti) then
            return STARFALL
        elseif (mod == 0) then
            return SCOUT
        elseif (mod == 1) then
            return TRUESHOT
        elseif (mod == 2) then
            return SEARING_ARROWS
        endif
    elseif (curHero == WARDEN) then
        if (skillUlti) then
            return VENGEANCE
        elseif (mod == 0) then
            return SHADOW_TOUCH
        elseif (mod == 1) then
            return FAN_KNIVES
        elseif (mod == 2) then
            return BLINK
        endif
    elseif (curHero == MOUNTAIN_GIANT_HERO) then
        if (skillUlti) then
            return MOUNTAIN_GIANT_WAR_CLUB
        elseif (mod == 0) then
            return MOUNTAIN_GIANT_TAUNT
        elseif (mod == 1) then
            return MOUNTAIN_GIANT_HARDENED_SKIN
        elseif (mod == 2) then
            return MOUNTAIN_GIANT_EAT_TREE
        endif
    // Undead
    elseif (curHero == DEATH_KNIGHT) then
        if (skillUlti) then
            return ANIM_DEAD
        elseif (mod == 0) then
            return DEATH_COIL
        elseif (mod == 1) then
            return DEATH_PACT
        elseif (mod == 2) then
            return UNHOLY_AURA
        endif
    elseif (curHero == DARK_RANGER_NEUTRAL) then
        if (skillUlti) then
            return DARK_RANGER_CHARM
        elseif (mod == 0) then
            return DARK_RANGER_SILENCE
        elseif (mod == 1) then
            return DARK_RANGER_BLACK_ARROW
        elseif (mod == 2) then
            return DARK_RANGER_LIFE_DRAIN
        endif
    elseif (curHero == LICH) then
        if (skillUlti) then
            return DEATH_DECAY
        elseif (mod == 0) then
            return DARK_RITUAL
        elseif (mod == 1) then
            return FROST_ARMOR
        elseif (mod == 2) then
            return FROST_NOVA
        endif
    elseif (curHero == CRYPT_LORD) then
        if (skillUlti) then
            return LOCUST_SWARM
        elseif (mod == 0) then
            return CARRION_SCARAB
        elseif (mod == 1) then
            return IMPALE
        elseif (mod == 2) then
            return THORNY_SHIELD
        endif
    // Furbolg
    elseif (curHero == FURBOLG_URSA_WARRIOR_HERO) then
        if (skillUlti) then
            return FURBOLG_CORRUPTION
        elseif (mod == 0) then
            return FURBOLG_COMMAND_AURA
        elseif (mod == 1) then
            return FURBOLG_FAERIE_FIRE
        elseif (mod == 2) then
            return FURBOLG_REJUVENATION
        endif
    // Draenei
    elseif (curHero == AKAMA) then
        if (skillUlti) then
            return REINCARNATION
        elseif (mod == 0) then
            return SPIRIT_WOLF_AKAMA
        elseif (mod == 1) then
            return CHAIN_LIGHTNING
        elseif (mod == 2) then
            return SHADOW_TOUCH_AKAMA
        endif
    // Naga
    elseif (curHero == NAGA_SORCERESS) then
        if (skillUlti) then
            return TORNADO
        elseif (mod == 0) then
            return FORKED_LIGHTNING
        elseif (mod == 1) then
            return FROST_ARROWS
        elseif (mod == 2) then
            return MANA_SHIELD
        endif
    // Neutral Heroes
    elseif (curHero == BEASTMASTER) then
        if (skillUlti) then
            return STAMPEDE
        elseif (mod == 0) then
            return SUMMON_BEAR
        elseif (mod == 1) then
            return SUMMON_QUILBEAST
        elseif (mod == 2) then
            return SUMMON_HAWK
        endif
    elseif (curHero == ALCHEMIST) then
        // TODO add skills
    elseif (curHero == TINKER) then
        // TODO add skills
    elseif (curHero == BREWMASTER) then
        // TODO add skills
    elseif (curHero == FIRELORD) then
        // TODO add skills
    endif

    return 'Aamk'
endfunction

function InitHero takes nothing returns nothing
    // Human
    if (GetUnitCountDone(PALADIN) > 0) then
        set hero_id = PALADIN
    elseif (GetUnitCountDone(ARCHMAGE) > 0) then
        set hero_id = ARCHMAGE
    elseif (GetUnitCountDone(MTN_KING) > 0) then
        set hero_id = MTN_KING
    elseif (GetUnitCountDone(BLOOD_MAGE) > 0) then
        set hero_id = BLOOD_MAGE
    // Orc
    elseif (GetUnitCountDone(BLADE_MASTER) > 0) then
        set hero_id = BLADE_MASTER
    elseif (GetUnitCountDone(FAR_SEER) > 0) then
        set hero_id = FAR_SEER
    elseif (GetUnitCountDone(TAUREN_CHIEF) > 0) then
        set hero_id = TAUREN_CHIEF
    elseif (GetUnitCountDone(SHADOW_HUNTER) > 0) then
        set hero_id = SHADOW_HUNTER
    // Night Elf
    elseif (GetUnitCountDone(DEMON_HUNTER) > 0) then
        set hero_id = DEMON_HUNTER
    elseif (GetUnitCountDone(KEEPER) > 0) then
        set hero_id = KEEPER
    elseif (GetUnitCountDone(MOON_CHICK) > 0) then
        set hero_id = MOON_CHICK
    elseif (GetUnitCountDone(WARDEN) > 0) then
        set hero_id = WARDEN
    elseif (GetUnitCountDone(MOUNTAIN_GIANT_HERO) > 0) then
        set hero_id = MOUNTAIN_GIANT_HERO
    // Undead
    elseif (GetUnitCountDone(DEATH_KNIGHT) > 0) then
        set hero_id = DEATH_KNIGHT
    elseif (GetUnitCountDone(DARK_RANGER_NEUTRAL) > 0) then
        set hero_id = DARK_RANGER_NEUTRAL
    elseif (GetUnitCountDone(LICH) > 0) then
        set hero_id = LICH
    elseif (GetUnitCountDone(CRYPT_LORD) > 0) then
        set hero_id = CRYPT_LORD
    // Demon
    elseif (GetUnitCountDone(PIT_LORD_NEUTRAL) > 0) then
        set hero_id = PIT_LORD_NEUTRAL
    elseif (GetUnitCountDone(EREDAR_WARLOCK_NEUTRAL) > 0) then
        set hero_id = EREDAR_WARLOCK_NEUTRAL
    elseif (GetUnitCountDone(DREAD_LORD) > 0) then
        set hero_id = DREAD_LORD
    // Furbolg
    elseif (GetUnitCountDone(FURBOLG_URSA_WARRIOR_HERO) > 0) then
        set hero_id = FURBOLG_URSA_WARRIOR_HERO
    // Draenei
    elseif (GetUnitCountDone(AKAMA) > 0) then
        set hero_id = AKAMA
    // Naga
    elseif (GetUnitCountDone(NAGA_SORCERESS) > 0) then
        set hero_id = NAGA_SORCERESS
    // Neutral Heroes
    elseif (GetUnitCountDone(BEASTMASTER) > 0) then
        set hero_id = BEASTMASTER
    elseif (GetUnitCountDone(ALCHEMIST) > 0) then
        set hero_id = ALCHEMIST
    elseif (GetUnitCountDone(TINKER) > 0) then
        set hero_id = TINKER
    elseif (GetUnitCountDone(BREWMASTER) > 0) then
        set hero_id = BREWMASTER
    elseif (GetUnitCountDone(FIRELORD) > 0) then
        set hero_id = FIRELORD
    endif
endfunction

function UpdateWorkers takes nothing returns nothing
	loop
		call SetGoldPeons(2)
		call SetWoodPeons(1)
		call HarvestGold(0, 2)
        call HarvestWood(0, 1)
		call Sleep(1)
	endloop
endfunction

function ConfigureAI takes nothing returns nothing
    call SetTargetHeroes( true )
    call SetUnitsFlee( true )
    call SetHeroesFlee( true )
    call SetPeonsRepair( true )
    call SetHeroesBuyItems( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetRandomPaths( true )
    call SetDefendPlayer( true )
endfunction

function BuildingStrategy takes nothing returns nothing
    // **********************************
    // *      Building Strategy         *
    // **********************************
	call SetReplacements( 1, 2, 3 )
	call SetBuildUnit( 1, FOUNTAIN_OF_LIFE )
	call SetBuildUnit( 1, HIDEOUT )
	call SetBuildUnit( 1, AI_LABORATORY)
	call SetBuildUnit( 3, NEUTRAL_CITIZEN )
	call SetBuildUnit( 1, SHREDDER )
	//call SetBuildUnit( 1, FREELANCER_LABORATORY ) // TODO Leads to a crash!
	//call SetBuildUnit( 1, FREELANCER_SHOP )
	//call SetBuildUnit( 1, FREELANCER_MERCENARY_CAMP )
	call SetBuildUnit( 1, FORTIFIED_HIDEOUT )
	call SetBuildUnit( 1, GUARDIANS_CITADEL )
	//call SetBuildUnit( 1, POWER_GENERATOR )
	//call SetBuildUnit( 1, RESEARCH_TENT )

	call SetBuildUpgr( 1, UPG_SENTINEL )
    call SetBuildUpgr( 1, UPG_TEMPLE_BLUEPRINTS )
	call SetBuildUpgr( 1, UPG_STORM_PROTECTION)
    call SetBuildUpgr( 100, UPG_IMPROVED_MASONRY )
	call SetBuildUpgr( 100, UPG_IMPROVED_MOUNT )
	call SetBuildUpgr( 100, UPG_CHEAP_EVOLUTION )
	call SetBuildUpgr( 100, UPG_IMPROVED_POWER_GENERATOR )
    // **********************************
    // *    End Building Strategy       *
    // **********************************
endfunction

function AttackWithMount takes nothing returns nothing
	if (GetUnitCount(GRYPHON_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, GRYPHON_MOUNT )
	endif
	if (GetUnitCount(WYVERN_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, WYVERN_MOUNT )
	endif
	if (GetUnitCount(FROST_WYRM_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, FROST_WYRM_MOUNT )
	endif
	if (GetUnitCount(CHIMAERA_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, CHIMAERA_MOUNT )
	endif
	if (GetUnitCount(NETHER_DRAKE_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, NETHER_DRAKE_MOUNT )
	endif
endfunction

function AddStandardUnitsToAttackWave takes nothing returns nothing
	//call PurchaseZeppelin()
	call AttackWithMount()
	call CampaignAttacker( 0, 1, hero_id )
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    // Target Priority #2
    if (target == null) then
        set target = GetExpansionFoe()
        if (target != null) then
            set take_exp = false
        endif
    endif

    // Target Priority #3
    if (target == null) then
        set target = GetMegaTarget()
    endif

    // Target Priority #4
    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #5
    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    // Target Priority #6
    if (target == null) then
        set target = GetCreepCamp( 0, 9, false )
    endif

    // Target Priority #7
    if (target == null) then
        set target = GetCreepCamp( 10, 100, true )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

function AttackWaves takes nothing returns nothing
    call Sleep( M2 )
    loop
        call InitAssaultGroup()
        //call CampaignAttacker( 0, 1, CREEP_DARK_WIZARD )
        //call CampaignAttacker( 0, 1, CREEP_UNBROKEN_DARK_WEAVER )
        //call CampaignAttacker( 0, 1, CREEP_DOOM_GUARD )
        //call CampaignAttacker( 0, 2, CREEP_HARPY )
        //call CampaignAttacker( 0, 2, CREEP_GREEN_DRAGON )
        call AddStandardUnitsToAttackWave()

        call Sleep( M1 ) 
        //call LaunchAttack() // Leads to a crash
    endloop
endfunction

function main takes nothing returns nothing
    call CampaignAI( AI_LABORATORY, function ChooseHeroSkill )
    call ConfigureAI( )
    call InitHero( )
    call StartThread(function UpdateWorkers)
	
	call BuildingStrategy( )

    call AttackWaves( )
endfunction
