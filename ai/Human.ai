globals
    constant integer UPG_TEMPLE_OF_DEMIGODS_BLUEPRINTS               = 'R00B'
    constant integer UPG_STORM_PROTECTION                            = 'R029'
    constant integer UPG_EVOLUTION                                   = 'R00U'
	constant integer UPG_IMPROVED_POWER_GENERATOR                    = 'R01T'
	constant integer UPG_IMPROVED_MOUNT                              = 'R024'
	
    constant integer HUMAN_CITIZEN_MALE                              = 'n00E'
    constant integer HUMAN_CITIZEN_FEMALE                            = 'n00F'
    constant integer HUMAN_HOUSING                                   = 'h00R'
	constant integer PORTAL                                          = 'h014'
	constant integer POWER_GENERATOR                                 = 'n025'
	
	constant integer HUMAN_SHIPYARD                                  = 'h010'
	constant integer HUMAN_TRANSPORT_SHIP                            = 'hbot'
	constant integer HUMAN_BATTLESHIP                                = 'hbsh'
	
	constant integer GRYPHON_MOUNT                                   = 'h004'
	constant integer WYVERN_MOUNT                                    = 'o003'
	constant integer FROST_WYRM_MOUNT                                = 'u004'
	constant integer CHIMAERA_MOUNT                                  = 'e005'
	constant integer NETHER_DRAKE_MOUNT                              = 'n007'

	constant integer SHREDDER                                        = 'ngir'
	constant integer AI_LABORATORY                                   = 'h01T'
	
	constant integer COMMAND_ATTACK_PLAYERS_ON                       = 1
	constant integer COMMAND_ATTACK_PLAYERS_OFF                      = 2
	constant integer COMMAND_GIVE_GOLD                               = 3
	constant integer COMMAND_GIVE_WOOD                               = 4
	constant integer COMMAND_SHIPS_ON                                = 5
	constant integer COMMAND_SHIPS_OFF                               = 6
	
	boolean attackEnemyPlayers = true
	boolean buildShips = false
endglobals

//===========================================================================
// Calculate the modulus/remainder of (dividend) divided by (divisor).
// Examples:  18 mod 5 = 3.  15 mod 5 = 0.  -8 mod 5 = 2.
//
function ModuloInteger takes integer dividend, integer divisor returns integer
    local integer modulus = dividend - (dividend / divisor) * divisor

    // If the dividend was negative, the above modulus calculation will
    // be negative, but within (-divisor..0).  We can add (divisor) to
    // shift this result into the desired range of (0..divisor).
    if (modulus < 0) then
        set modulus = modulus + divisor
    endif

    return modulus
endfunction

function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()
    local integer mod = ModuloInteger(level, 4)
    local boolean skillUlti = ModuloInteger(level, 6) == 0 and level / 6 <= 9

    if (curHero == PALADIN) then
        if (skillUlti) then
            return RESURRECTION
        elseif (mod == 0) then
            return HOLY_BOLT
        elseif (mod == 1) then
            return DIVINE_SHIELD
        elseif (mod == 2) then
            return DEVOTION_AURA
        endif
    elseif (curHero == ARCHMAGE) then
        if (skillUlti) then
            return MASS_TELEPORT
        elseif (mod == 0) then
            return BLIZZARD
        elseif (mod == 1) then
            return BRILLIANCE_AURA
        elseif (mod == 2) then
            return WATER_ELEMENTAL
        endif
    elseif (curHero == MTN_KING) then
        if (skillUlti) then
            return AVATAR
        elseif (mod == 0) then
            return THUNDER_CLAP
        elseif (mod == 1) then
            return THUNDER_BOLT
        elseif (mod == 2) then
            return BASH
        endif
    elseif (curHero == BLOOD_MAGE) then
        if (skillUlti) then
            return SUMMON_PHOENIX
        elseif (mod == 0) then
            return FLAME_STRIKE
        elseif (mod == 1) then
            return BANISH
        elseif (mod == 2) then
            return SIPHON_MANA
        endif
    endif

    return 'Aamk'
endfunction

function InitHero takes nothing returns nothing
    if (GetUnitCountDone(PALADIN) > 0) then
        set hero_id = PALADIN
    elseif (GetUnitCountDone(ARCHMAGE) > 0) then
        set hero_id = ARCHMAGE
    elseif (GetUnitCountDone(MTN_KING) > 0) then
        set hero_id = MTN_KING
    elseif (GetUnitCountDone(BLOOD_MAGE) > 0) then
        set hero_id = BLOOD_MAGE
    endif
endfunction

function BuildingStrategyShips takes nothing returns nothing
    if (buildShips) then
		call SetBuildUnit( 1, HUMAN_SHIPYARD )
		call SetBuildUnit( 1, HUMAN_TRANSPORT_SHIP )
		call SetBuildUnit( 2, HUMAN_BATTLESHIP )
    else
        call SetBuildUnit( 0, HUMAN_SHIPYARD )
		call SetBuildUnit( 0, HUMAN_TRANSPORT_SHIP )
		call SetBuildUnit( 0, HUMAN_BATTLESHIP )
	endif
endfunction

function UpdateWorkersAndReceiveCommands takes nothing returns nothing
	loop
		call SetGoldPeons(5 + GetUnitCount(HUMAN_HOUSING) * 3)
		call SetWoodPeons(5)
		loop
			exitwhen (CommandsWaiting() <= 0)
			if (GetLastCommand() == COMMAND_ATTACK_PLAYERS_ON) then
				set attackEnemyPlayers = true
				call DisplayText(GetAiPlayer(), "I won't attack enemy players anymore!")
			elseif (GetLastCommand() == COMMAND_ATTACK_PLAYERS_OFF) then
				set attackEnemyPlayers = false
				call DisplayText(GetAiPlayer(), "I won't attack enemy players anymore!")
			elseif (GetLastCommand() == COMMAND_GIVE_GOLD) then
                call SetPlayerState(Player(GetLastData()), PLAYER_STATE_RESOURCE_GOLD, GetPlayerState(Player(GetLastData()), PLAYER_STATE_RESOURCE_GOLD) + GetPlayerState(Player(GetAiPlayer()), PLAYER_STATE_RESOURCE_GOLD))
                call SetPlayerState(Player(GetAiPlayer()), PLAYER_STATE_RESOURCE_GOLD, 0)
				call DisplayText(GetAiPlayer(), "Here, take my gold!")
            elseif (GetLastCommand() == COMMAND_GIVE_WOOD) then
                call SetPlayerState(Player(GetLastData()), PLAYER_STATE_RESOURCE_LUMBER, GetPlayerState(Player(GetLastData()), PLAYER_STATE_RESOURCE_LUMBER) + GetPlayerState(Player(GetAiPlayer()), PLAYER_STATE_RESOURCE_LUMBER))
                call SetPlayerState(Player(GetAiPlayer()), PLAYER_STATE_RESOURCE_LUMBER, 0)
				call DisplayText(GetAiPlayer(), "Here, take my wood!")
            elseif (GetLastCommand() == COMMAND_SHIPS_ON) then
                set buildShips = true
                call BuildingStrategyShips()
                call DisplayText(GetAiPlayer(), "I will start building ships!")
            elseif (GetLastCommand() == COMMAND_SHIPS_OFF) then
                set buildShips = false
                call BuildingStrategyShips()
                call DisplayText(GetAiPlayer(), "I will stop building ships!")
			else
				//call DisplayText(GetAiPlayer(), "I received an unknown AI command: " + I2S(GetLastCommand()))
			endif
			call PopLastCommand()
			call Sleep(5)
		endloop
		call Sleep(10)
	endloop
endfunction

function ConfigureAI takes nothing returns nothing
    call SetTargetHeroes( true )
    call SetUnitsFlee( true )
    call SetHeroesFlee( true )
    call SetPeonsRepair( true )
    call SetHeroesBuyItems( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
	call SetWatchMegaTargets( true )
	call SetIgnoreInjured( false )
	call SetGroupsFlee( false )
	call SetCaptainChanges ( false )
	call SetSmartArtillery ( true )
    call GroupTimedLife ( true )
	call SetAmphibious()
    call SetRandomPaths( true )
    call SetDefendPlayer( true )
endfunction

function BuildingStrategy takes nothing returns nothing
    // **********************************
    // *      Building Strategy         *
    // **********************************
    // Tier 1 Buildings
	call SetReplacements( 1, 2, 3 )
	call SetBuildUnit( 1, TOWN_HALL )
	call SetBuildUnit( 17, PEASANT )
	call SetBuildUnit( 2, HUMAN_CITIZEN_MALE )
	call SetBuildUnit( 1, AI_LABORATORY )
    call SetBuildUnit( 1, SHREDDER )
	call SetBuildUnit( 3, HOUSE )
	call SetBuildUnit( 2, HUMAN_HOUSING )
	call SetBuildUnit( 2, BARRACKS )
	call SetBuildUnit( 1, HUMAN_ALTAR )
	call SetBuildUnit( 1, LUMBER_MILL )
	call SetBuildUnit( 1, BLACKSMITH )
	call SetBuildUnit( 1, ARCANE_VAULT )
	
	call SetBuildUpgr( 1, UPG_MELEE )
    call SetBuildUpgr( 1, UPG_RANGED )
	call SetBuildUpgr( 1, UPG_ARMOR )
	call SetBuildUpgr( 1, UPG_LEATHER )
    call SetBuildUpgr( 1, UPG_DEFEND )
	call SetBuildUpgr( 1, UPG_MASONRY )

    // Tier 2 buildings
	call SetBuildUnit( 1, KEEP )
	call SetBuildUnit( 1, ARCANE_SANCTUM )
	call SetBuildUnit( 1, WORKSHOP )
	call SetBuildUnit( 4, HOUSE )
	call SetBuildUnit( 2, HUMAN_CITIZEN_FEMALE )
	
	call SetBuildUnit( 3, WATCH_TOWER )
	
	call SetBuildUpgr( 2, UPG_MELEE )
    call SetBuildUpgr( 2, UPG_RANGED )
	call SetBuildUpgr( 2, UPG_ARMOR )
	call SetBuildUpgr( 2, UPG_LEATHER )
	call SetBuildUpgr( 1, UPG_WOOD )
	call SetBuildUpgr( 2, UPG_MASONRY )
	call SetBuildUpgr( 1, UPG_SENTINEL )
	call SetBuildUpgr( 1, UPG_GUN_RANGE )
	call SetBuildUpgr( 1, UPG_PRAYING )
	call SetBuildUpgr( 1, UPG_SORCERY )
	call SetBuildUpgr( 1, UPG_FRAGS )
	call SetBuildUpgr( 1, UPG_FLAK )
	call SetBuildUpgr( 1, UPG_TANK )
	call SetBuildUpgr( 1, 'Rhfl' ) // flare

    // Tier 3 buildings
	call SetBuildUnit( 1, CASTLE )
	call SetBuildUnit( 1, AVIARY )
	call SetBuildUnit( 2, GUARD_TOWER )
	call SetBuildUnit( 1, CANNON_TOWER )
	call SetBuildUnit( 1, POWER_GENERATOR )
	
	call BuildingStrategyShips()
	
	call SetBuildUpgr( 3, UPG_MELEE )
    call SetBuildUpgr( 3, UPG_RANGED )
	call SetBuildUpgr( 3, UPG_ARMOR )
	call SetBuildUpgr( 3, UPG_LEATHER )
	call SetBuildUpgr( 2, UPG_WOOD )
	call SetBuildUpgr( 3, UPG_MASONRY )
	call SetBuildUpgr( 1, 'Rhpm' ) // backpack
	call SetBuildUpgr( 2, UPG_PRAYING )
	call SetBuildUpgr( 2, UPG_SORCERY )
	call SetBuildUpgr( 1, UPG_BREEDING )
	call SetBuildUpgr( 1, UPG_HAMMERS )
	call SetBuildUpgr( 1, UPG_BOMBS )
	call SetBuildUpgr( 1, 'Rhsb' ) // sundering blades
	call SetBuildUpgr( 1, UPG_TEMPLE_OF_DEMIGODS_BLUEPRINTS )
	call SetBuildUpgr( 1, UPG_STORM_PROTECTION)
	call SetBuildUpgr( 100, UPG_EVOLUTION )
	call SetBuildUpgr( 100, UPG_IMPROVED_POWER_GENERATOR )
	call SetBuildUpgr( 100, UPG_IMPROVED_MOUNT )
    // **********************************
    // *    End Building Strategy       *
    // **********************************
endfunction

function AttackWithMount takes nothing returns nothing
	if (GetUnitCount(GRYPHON_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, GRYPHON_MOUNT )
	endif
	if (GetUnitCount(WYVERN_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, WYVERN_MOUNT )
	endif
	if (GetUnitCount(FROST_WYRM_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, FROST_WYRM_MOUNT )
	endif
	if (GetUnitCount(CHIMAERA_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, CHIMAERA_MOUNT )
	endif
	if (GetUnitCount(NETHER_DRAKE_MOUNT) > 0) then
		call CampaignAttacker( 0, 1, NETHER_DRAKE_MOUNT )
	endif
endfunction

function AddStandardUnitsToAttackWave takes nothing returns nothing
	call PurchaseZeppelin()
	call AttackWithMount()
    call CampaignAttacker( 0, 1, hero_id )
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

	if (attackEnemyPlayers) then
		// Target Priority #1
		if (target == null) then
			set target = GetAllianceTarget()
			if (target != null) then
				set setAlly = false
			endif
		endif

		// Target Priority #2
		if (target == null) then
			set target = GetExpansionFoe()
			if (target != null) then
				set take_exp = false
			endif
		endif

		// Target Priority #3
		if (target == null) then
			set target = GetMegaTarget()
		endif

		// Target Priority #4
		if (target == null) then
			set target = GetEnemyExpansion()
		endif

		// Target Priority #5
		if (target == null) then
			set target = GetEnemyExpansion()
			if (target == null) then
				call StartGetEnemyBase(  )
				loop
					exitwhen (not WaitGetEnemyBase())
					call SuicideSleep( 1 )
				endloop
				set target = GetEnemyBase()
			endif
		endif
	endif

    // Target Priority #6
    if (target == null) then
        set target = GetCreepCamp( 0, 9, false )
    endif

    // Target Priority #7
    if (target == null) then
        set target = GetCreepCamp( 10, 100, true )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

function AttackWaves takes nothing returns nothing
    //*** WAVE 1 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, FOOTMAN )
    call CampaignAttackerEx( 0, 1, 2, RIFLEMAN )
    call AddStandardUnitsToAttackWave()
    call Sleep( M3 ) // Waits 3 minutes before attacking
    call LaunchAttack()

    //*** WAVE 2 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, FOOTMAN )
    call CampaignAttackerEx( 0, 1, 2, RIFLEMAN )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 3 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call AddStandardUnitsToAttackWave()
    call Sleep( M1 ) // Waits 1 minute before attacking
    call LaunchAttack()

    //*** WAVE 4 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 5 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 6 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 7 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 8 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call CampaignAttackerEx( 2, 2, 3, SORCERESS )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 9 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call CampaignAttackerEx( 2, 2, 3, SORCERESS )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 10 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call CampaignAttackerEx( 2, 2, 3, SORCERESS )
    call CampaignAttackerEx( 2, 2, 3, GRYPHON )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 11 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, FOOTMAN )
    call CampaignAttackerEx( 1, 2, 3, RIFLEMAN )
    call CampaignAttackerEx( 1, 2, 3, KNIGHT )
    call CampaignAttackerEx( 1, 2, 3, MORTAR )
    call CampaignAttackerEx( 2, 2, 3, PRIEST )
    call CampaignAttackerEx( 2, 2, 3, SORCERESS )
    call CampaignAttackerEx( 2, 2, 3, GRYPHON )
    call CampaignAttackerEx( 2, 2, 3, TANK )
    call AddStandardUnitsToAttackWave()
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    loop //Init the infinite attack loop
        //*** WAVE 12 ***
		call InitAssaultGroup()
		
		// small ground army
		call CampaignAttackerEx( 3, 3, 3, FOOTMAN )
		call CampaignAttackerEx( 3, 3, 3, RIFLEMAN )
		call CampaignAttackerEx( 3, 3, 3, KNIGHT )
		call CampaignAttackerEx( 3, 3, 3, MORTAR )
		call CampaignAttackerEx( 3, 3, 3, PRIEST )
		call CampaignAttackerEx( 3, 3, 3, SORCERESS )
		call CampaignAttackerEx( 3, 3, 3, TANK )
		
		// big air army
        call CampaignAttackerEx( 15, 20, 25, GRYPHON )
        
		call AddStandardUnitsToAttackWave()
		call Sleep( M2 ) // Waits 2 minutes before attacking
		call LaunchAttack()
    endloop
endfunction

function main takes nothing returns nothing
	//call DoAiScriptDebug()
	set attackEnemyPlayers = MeleeDifficulty() == MELEE_INSANE
	set buildShips = false
    call CampaignAI( HOUSE, function ChooseHeroSkill )
    call ConfigureAI( )
    call InitHero( )
	call StartThread(function UpdateWorkersAndReceiveCommands)

    call BuildingStrategy( )

    call AttackWaves( )
endfunction
