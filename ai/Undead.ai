globals
    constant integer UPG_TEMPLE_OF_DEMIGODS_BLUEPRINTS               = 'R00B'
    constant integer UPG_EVOLUTION                                   = 'R00U'

    constant integer UNDEAD_CITIZEN_MALE                             = 'n00G'
    constant integer UNDEAD_CITIZEN_FEMALE                           = 'n00H'
    constant integer UNDEAD_HOUSING                                  = 'h00U'
	constant integer PORTAL                                          = 'h014'
	
	constant integer DARK_RANGER_NEUTRAL                             = 'Nbrn'
	constant integer DARK_RANGER_SILENCE                             = 'ANsi'
	constant integer DARK_RANGER_DARK_PORTAL                         = 'A01T'
	constant integer DARK_RANGER_LIFE_DRAIN                          = 'ANdr'
	constant integer DARK_RANGER_UNHOLY_SPIRITS                      = 'A01S'

endglobals

//===========================================================================
// Calculate the modulus/remainder of (dividend) divided by (divisor).
// Examples:  18 mod 5 = 3.  15 mod 5 = 0.  -8 mod 5 = 2.
//
function ModuloInteger takes integer dividend, integer divisor returns integer
    local integer modulus = dividend - (dividend / divisor) * divisor

    // If the dividend was negative, the above modulus calculation will
    // be negative, but within (-divisor..0).  We can add (divisor) to
    // shift this result into the desired range of (0..divisor).
    if (modulus < 0) then
        set modulus = modulus + divisor
    endif

    return modulus
endfunction

function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()
    local integer mod = ModuloInteger(level, 4)
    local boolean skillUlti = ModuloInteger(level, 6) == 0 and level / 6 <= 9

    if (curHero == DEATH_KNIGHT) then
        if (skillUlti) then
            return ANIM_DEAD
        elseif (mod == 0) then
            return DEATH_COIL
        elseif (mod == 1) then
            return DEATH_PACT
        elseif (mod == 2) then
            return UNHOLY_AURA
        endif
    elseif (curHero == DARK_RANGER_NEUTRAL) then
        if (skillUlti) then
            return DARK_RANGER_UNHOLY_SPIRITS
        elseif (mod == 0) then
            return DARK_RANGER_SILENCE
        elseif (mod == 1) then
            return DARK_RANGER_DARK_PORTAL
        elseif (mod == 2) then
            return DARK_RANGER_LIFE_DRAIN
        endif
    elseif (curHero == LICH) then
        if (skillUlti) then
            return DEATH_DECAY
        elseif (mod == 0) then
            return DARK_RITUAL
        elseif (mod == 1) then
            return FROST_ARMOR
        elseif (mod == 2) then
            return FROST_NOVA
        endif
    elseif (curHero == CRYPT_LORD) then
        if (skillUlti) then
            return LOCUST_SWARM
        elseif (mod == 0) then
            return CARRION_SCARAB
        elseif (mod == 1) then
            return IMPALE
        elseif (mod == 2) then
            return THORNY_SHIELD
        endif
    endif

    return 'Aamk'
endfunction

function InitHero takes nothing returns nothing
    if (GetUnitCountDone(DEATH_KNIGHT) > 0) then
        set hero_id = DEATH_KNIGHT
    elseif (GetUnitCountDone(DARK_RANGER_NEUTRAL) > 0) then
        set hero_id = DARK_RANGER_NEUTRAL
    elseif (GetUnitCountDone(LICH) > 0) then
        set hero_id = LICH
    elseif (GetUnitCountDone(CRYPT_LORD) > 0) then
        set hero_id = CRYPT_LORD
    endif
endfunction

function ConfigureAI takes nothing returns nothing
    call SetTargetHeroes( true )
    call SetUnitsFlee( true )
    call SetHeroesFlee( true )
    call SetPeonsRepair( true )
    call SetHeroesBuyItems( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
endfunction

function BuildingStrategy takes nothing returns nothing
    // **********************************
    // *      Building Strategy         *
    // **********************************
    // Tier 1 Buildings
    call SetReplacements( 1, 2, 3 )
    call SetBuildUnit( 1, NECROPOLIS_1 )
	call SetBuildUnit( 1, UNDEAD_MINE )
    call SetBuildUnit( 6, ACOLYTE )
    call SetBuildUnit( 2, CRYPT )
    call SetBuildUnit( 5, GHOUL )
    call SetBuildUnit( 3, ZIGGURAT_1 )
    call SetBuildUnit( 1, UNDEAD_ALTAR )
    call SetBuildUnit( 1, GRAVEYARD )
    call SetBuildUnit( 1, TOMB_OF_RELICS )
	
	call SetBuildUpgr( 1, UPG_UNHOLY_STR )
	call SetBuildUpgr( 1, UPG_UNHOLY_ARMOR )
    call SetBuildUpgr( 1, UPG_CR_ATTACK )
	call SetBuildUpgr( 1, UPG_CR_ARMOR )
	call SetBuildUpgr( 1, UPG_FIEND_WEB )
	call SetBuildUpgr( 1, UPG_CANNIBALIZE )

    // Tier 2 buildings
    call SetBuildUnit( 1, NECROPOLIS_2 )
    call SetBuildUnit( 1, GRAVEYARD )
    call SetBuildUnit( 1, DAMNED_TEMPLE )
    call SetBuildUnit( 1, SLAUGHTERHOUSE )
    call SetBuildUnit( 5, ACOLYTE )
    call SetBuildUnit( 2, ZIGGURAT_1 )
	
	call SetBuildUpgr( 2, UPG_UNHOLY_STR )
	call SetBuildUpgr( 2, UPG_UNHOLY_ARMOR )
    call SetBuildUpgr( 2, UPG_CR_ATTACK )
	call SetBuildUpgr( 2, UPG_CR_ARMOR )
	call SetBuildUpgr( 1, UPG_MEAT_WAGON )
	call SetBuildUpgr( 1, UPG_FIEND_WEB )
	call SetBuildUpgr( 1, UPG_BANSHEE )
	call SetBuildUpgr( 1, UPG_NECROS )
	call SetBuildUpgr( 1, UPG_SKEL_LIFE )
	call SetBuildUpgr( 1, UPG_SKEL_MASTERY )

    // Tier 3 buildings
    call SetBuildUnit( 1, NECROPOLIS_3 )
    call SetBuildUnit( 1, SAC_PIT )
    call SetBuildUnit( 2, BONEYARD )
    call SetBuildUnit( 2, ZIGGURAT_FROST )
    call SetBuildUnit( 2, ZIGGURAT_2 )
	
	call SetBuildUpgr( 3, UPG_UNHOLY_STR )
	call SetBuildUpgr( 3, UPG_UNHOLY_ARMOR )
    call SetBuildUpgr( 3, UPG_CR_ATTACK )
	call SetBuildUpgr( 3, UPG_CR_ARMOR )
	call SetBuildUpgr( 2, UPG_BANSHEE )
	call SetBuildUpgr( 2, UPG_NECROS )
	call SetBuildUpgr( 1, UPG_SACRIFICE )
	call SetBuildUpgr( 1, UPG_PLAGUE )
	call SetBuildUpgr( 1, UPG_BURROWING )
	call SetBuildUpgr( 1, UPG_STONE_FORM )
	call SetBuildUpgr( 1, UPG_EXHUME )
	call SetBuildUpgr( 1, UPG_GHOUL_FRENZY )
	call SetBuildUpgr( 1, UPG_BLK_SPHINX )
	call SetBuildUpgr( 1, UPG_WYRM_BREATH )
	call SetBuildUpgr( 1, 'Rupm' ) // backpack
	call SetBuildUpgr( 1, UPG_TEMPLE_OF_DEMIGODS_BLUEPRINTS )
	call SetBuildUpgr( 100, UPG_EVOLUTION )
    // **********************************
    // *    End Building Strategy       *
    // **********************************
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    // Target Priority #2
    if (target == null) then
        set target = GetExpansionFoe()
        if (target != null) then
            set take_exp = false
        endif
    endif

    // Target Priority #3
    if (target == null) then
        set target = GetMegaTarget()
    endif

    // Target Priority #4
    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #5
    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    // Target Priority #6
    if (target == null) then
        set target = GetCreepCamp( 0, 9, false )
    endif

    // Target Priority #7
    if (target == null) then
        set target = GetCreepCamp( 10, 100, true )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

function AttackWaves takes nothing returns nothing
    //*** WAVE 1 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, GHOUL )
    call CampaignAttackerEx( 0, 1, 2, PIT_FIEND )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M3 ) // Waits 3 minutes before attacking
    call LaunchAttack()

    //*** WAVE 1 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 2, 3, 3, GHOUL )
    call CampaignAttackerEx( 0, 1, 2, PIT_FIEND )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 2 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M1 ) // Waits 1 minute before attacking
    call LaunchAttack()

    //*** WAVE 3 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()


    //*** WAVE 4 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 5 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 6 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 7 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttackerEx( 2, 2, 3, NECRO )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 8 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttackerEx( 2, 2, 3, NECRO )
    call CampaignAttackerEx( 2, 2, 3, BANSHEE )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 9 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttackerEx( 2, 2, 3, NECRO )
    call CampaignAttackerEx( 2, 2, 3, BANSHEE )
    call CampaignAttackerEx( 2, 2, 3, GARGOYLE )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    //*** WAVE 10 ***
    call InitAssaultGroup()
    call CampaignAttackerEx( 3, 4, 4, GHOUL )
    call CampaignAttackerEx( 1, 2, 3, PIT_FIEND )
    call CampaignAttackerEx( 1, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 1, 2, 3, MEAT_WAGON )
    call CampaignAttackerEx( 2, 2, 3, OBSIDIAN_STATUE )
    call CampaignAttackerEx( 2, 2, 3, NECRO )
    call CampaignAttackerEx( 2, 2, 3, BANSHEE )
    call CampaignAttackerEx( 2, 2, 3, GARGOYLE )
    call CampaignAttackerEx( 2, 2, 3, FROST_WYRM )
    call CampaignAttacker( 0, 1, hero_id )
    call Sleep( M2 ) // Waits 2 minutes before attacking
    call LaunchAttack()

    loop //Init the infinite attack loop
        //*** WAVE 11 ***
        call InitAssaultGroup()
        call CampaignAttackerEx( 4, 8, 12, GHOUL )
        call CampaignAttackerEx( 4, 8, 12, PIT_FIEND )
        call CampaignAttackerEx( 4, 8, 12, GARGOYLE )
        call CampaignAttackerEx( 2, 4, 8, MEAT_WAGON )
        call CampaignAttackerEx( 2, 4, 8, OBSIDIAN_STATUE )
        call CampaignAttackerEx( 3, 6, 9, NECRO )
        call CampaignAttackerEx( 3, 6, 9, BANSHEE )
        call CampaignAttackerEx( 3, 6, 9, GARGOYLE )
        call CampaignAttackerEx( 2, 3, 6, FROST_WYRM )
        call CampaignAttacker( 0, 1, hero_id )
        call Sleep( M2 ) // Waits 2 minutes before attacking
        call LaunchAttack()
    endloop
endfunction

function main takes nothing returns nothing
    call CampaignAI( ZIGGURAT_1, function ChooseHeroSkill )
    call ConfigureAI( )
    call InitHero( )

    call BuildingStrategy( )

    call AttackWaves( )
endfunction